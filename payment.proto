syntax = "proto3";

package payment;

option go_package ="./proto";

service PaymentService {
    rpc CreateSubscription(CreateSubscriptionRequest) returns (CreateSubscriptionResponse);
    rpc UpdatePaymentStatus(UpdatePaymentReq) returns (PaymentCommonRes);
    rpc RenewSubscription(RenewSubReq) returns (PaymentCommonRes);
    rpc GetSubDetails(GetSubReq) returns (GetSubRes);
    rpc CreatePlan(CreatePlanReq) returns (PaymentCommonRes);
    rpc GetPlan(EmptyReq) returns (GetPlanRes);
    rpc DeletePlan(DeletePlanReq) returns (PaymentCommonRes); 

}

message DeletePlanReq{
    string plan_id=1;
}

message GetPlanRes{
    repeated Plan Plans =1;
}

message Plan{
    string razorpay_plan_id  =3;
    string name = 1;
    int64 price = 2;
    string period = 4;
}

message EmptyReq{}

message CreatePlanReq{
    string name = 1;
    int64 amount = 2;
    string period = 4;
    int32 interval = 5;
}

message GetSubReq{
    uint32 user_id =1;
}

message GetSubRes{
    int64 expiry_time =1;
}

message RenewSubReq{
    uint32 user_id =1;
    uint32 plan_id =2;
}

message UpdatePaymentReq{
    string payment_id = 1;
    string order_id = 2;
    string signature =3;
}

message PaymentCommonRes{
    string message=1;
    int64 status =2;
    string error =3;
    map<string, Values>data =4;
}

message Values {
    oneof value {
      string string_value = 1;
      int32 int_value = 2;
      bool bool_value = 3;
      double double_value = 4;
    }
}

message CreateSubscriptionRequest {
    uint32 user_id = 1;
    uint32 plan_id = 2;
}

message CreateSubscriptionResponse {
    string message = 1;
    bool success = 2;
}
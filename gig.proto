syntax = "proto3";

package gig;

option go_package ="./proto";

service GigService {
    rpc CreateGig(CreateGigReq) returns (EmptyResponse);
    rpc GetGigsByFreelancerID(GetGigsByFreelancerIDRequest) returns (GetGigsByFreelancerIDResponse);
}

message GetGigsByFreelancerIDRequest {
    uint64 freelancer_id = 1;
}


message GetGigsByFreelancerIDResponse {
    repeated Gig gigs = 1;
}

message Gig {
    uint64 id = 1;
    string title = 2;
    string description = 3;
    uint32 category = 4;
    uint64 freelancer_id = 5;
    float price = 6;
    int32 delivery_days = 7;
    int32 revisions = 8;
    repeated Image image = 9;
  }

message CreateGigReq{
    string title = 1;
    string description = 2;
    string category = 3;
    string type = 4;
    double price = 5;
    int64 delivery_days = 6;
    int64 number_of_revisions = 7;
    uint32 user_id = 8;
    repeated bytes images = 9; 
}

message Image{
    string url =1;
}

message EmptyResponse {

}
